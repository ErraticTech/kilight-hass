name: Lint

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        description: SonarQube project token
        required: true
      SONAR_HOST_URL:
        description: SonarQube server URL
        required: true
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - "main"
      - "develop"
  pull_request:
    branches:
      - "main"
      - "develop"

permissions: {}

jobs:
  ruff:
    name: Ruff
    runs-on: ubuntu-latest
    steps:
        - name: Checkout the repository
          uses: actions/checkout@v5

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.13"
            cache: "pip"

        - name: Install requirements
          run: python3 -m pip install -r requirements.txt

        - name: Lint
          run: python3 -m ruff check .

        - name: Format
          run: python3 -m ruff format . --check

  sonarscan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install requirements
        run: python3 -m pip install -r requirements.txt

      - name: Run SonarScan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
